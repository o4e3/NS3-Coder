{
  "repo_name": "MOSAIC-UA/802.11ah-ns3",
  "github_url": "https://github.com/MOSAIC-UA/802.11ah-ns3",
  "readme": "# !!!WARNING: THIS IS AN OLD VERSION OF OUR 802.11AH MODULE, VISIT https://github.com/imec-idlab/IEEE-802.11ah-ns-3 FOR THE LATEST RELEASE!!!\n\n# IEEE 802.11ah simulation module for NS-3\n\nThis repository hosts an implementation of the IEEE802.11ah (Wi-Fi HaLow) protocol for the NS-3 network simulator. It comes pre-packaged with NS-3 version 3.23 and an example showing how to use and configure it. For more details about our implementation and supported features, please visit [our webpage](https://www.uantwerpen.be/en/rg/mosaic/projects/ieee-802-11ah/). If you have questions or want to contribute, plese send us an [email](mailto:80211ah@mosaic.uantwerpen.be).\n\nIf you use our work, please use the following citation to refer to it:\n\n> Le Tian, S\u00e9bastien Deronne, Steven Latr\u00e9, Jeroen Famaey. Implementation and validation of an IEEE 802.11ah module for NS-3. Workshop on ns-3 (WNS3), Seattle, USA, 2016.\n\n\n# Installation and usage instructions\n\n1. Download source code from our github repository.  \n2. Change into /802.11ah-ns3/ns-3 directory.  \n3. Build and run:\n```bash\n./waf configure  \n./waf  \n./waf --run \"scratch/s1g-mac-test --NRawSta=30 --NGroup=1 --SlotFormat=0 --NRawSlotCount=162 --NRawSlotNum=5 --DataMode=\"OfdmRate650KbpsBW2MHz\" --datarate=0.65 --bandWidth=2 --rho=\"50\" --simulationTime=60 --payloadSize=256 --BeaconInterval=100000 --UdpInterval=0.1 --Nsta=30 --file=\"./TestMac/mac-sta.txt\"  --pcapfile=\"./TestMac/mac-sta\" --seed=1\"\n```\nNote: if errors related to nullptr arise when compiling, CXXFLAGS should be included into the \"./waf configure\" command,as follows:   \n\n```CXXFLAGS=\"-std=c++0x\" ./waf configure --disable-examples --disable-tests```\n\nMoreover, there are some parameters which can be changed inside the script file \"s1g-mac-test.cc\", some of which are described below.\n\n## PropagationLoss model:\n\nThe current configuration is used in outdoor macro scenarios, users can change these parameters to test other scenarios as well. More information can be found at [our website](https://www.uantwerpen.be/en/rg/mosaic/projects/ieee-802-11ah/).  \n\n```cpp\nchannel.AddPropagationLoss (\"ns3::LogDistancePropagationLossModel\",\"Exponent\", DoubleValue(3.76) ,\"ReferenceLoss\", DoubleValue(8.0), \"ReferenceDistance\", DoubleValue(1.0));\n```\n\n## WifiMacQueue length\n\nUsers can change vaule of \"MaxPacketNumber\" and \"MaxDelaysend\" attributes according to their own requirements.\n\n```cpp\nConfig::Set (\"/NodeList/*/DeviceList/0/$ns3::WifiNetDevice/Mac/$ns3::RegularWifiMac/BE_EdcaTxopN/Queue/MaxPacketNumber\", UintegerValue(60000));\nConfig::Set (\"/NodeList/*/DeviceList/0/$ns3::WifiNetDevice/Mac/$ns3::RegularWifiMac/BE_EdcaTxopN/Queue/MaxDelay\", TimeValue (NanoSeconds (6000000000000)));\n```\n\n# Example scenario\n\nAn example is included in the script file \"./ns-3/scratch/s1g-mac-test.cc\". Users can use the file \"s1g-mac-test.cc\" to simulate the RAW feature of 802.11ah with different Wi-Fi modes. A topology in which stations are distributed randomly within a \"rho\" meters distance of the access point (AP) is created. Subsequently, the stations are associated with the AP using the new fast association mechanism. Then, all stations generate packets and send them to the AP in their assigned RAW slots. Finally, after \"SimulationTime\" seconds, all stations stop generating new packets and finish after sending all packets still in their transmit buffer.\n\n## RAW related parameters:     \n\n* NRawSta:            Number of stations supporting RAW.                 \n* NGroup:             Number of RAW groups. \n* NRawSlotNum:        Number of slots per RAW group.                     \n* SlotFormat:         Format of RAW slot count.                 \n* NRawSlotCount:      Used to calculate number of RAW slot duration.  \n\nNotes:                                              \n* NGroup, stations are divided evenly among each RAW groups\n* RAW slot duration = 500 us + NRawSlotCount * 120 us, NRawSlotCount is y = 11(8) bits length when SlotFormat is set to\n1(0), and NRawSlotNum is (14 - y) bits length.\n  \n## Wi-Fi mode parameters:  \n* DataMode:           Data mode.  \n* datarate:           Data rate of data mode.  \n* bandWidth:          BandWidth of data mode.  \n\nNote: Relation between the above 3 parameters and MCS is described in file \"MCStoWifiMode\".       \n    \n## Other parameters:  \n* SimulationTime:     Simulatiom time in seconds after all stations get associated with AP.  \n* payloadSize:        Size of payload.                   \n* BeaconInterval:     Beacon interval time in us.    \n* UdpInterval:        Traffic mode, station send one packet every UdpInterval seconds.  \n* Nsta:               Number of total stations.  \n* rho:                Maximal distance between AP and stations.   \n* file:               Path of files containing result information.        \n* pcapfile:           Pcap file path.   \n* seed:               Seed of RandomVariableStream. \n",
  "examples": []
}