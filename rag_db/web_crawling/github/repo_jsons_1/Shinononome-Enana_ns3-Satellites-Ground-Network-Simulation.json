{
  "repo_name": "Shinononome-Enana/ns3-Satellites-Ground-Network-Simulation",
  "github_url": "https://github.com/Shinononome-Enana/ns3-Satellites-Ground-Network-Simulation",
  "readme": "# ns3-Satellites-Ground-Network-Simulation\nSimulating satellite-ground network using ns-3 on Ubuntu18.04. \n- Simulation main task: satellite-ground link switch algorithm, including NSD/NSH/LRST......\n- Default satellite/ground topology: rectangle mesh\n\n## Basic Settings\n- Ubuntu 18.04\n- ns-3.37\n\n## Prerequisite\n- Before compling this ns3 project, you need to PIP necessary files.\n```\nsudo apt install git \nsudo apt-get install g++ python3 python3-dev pkg-config sqlite3 cmake\nsudo apt-get install mercurial\nsudo apt-get install qt5-default\nsudo apt-get install autoconf cvs bzr unrar\nsudo apt-get install gdb valgrind\nsudo apt-get install gsl-bin libgsl-dev libgslcblas0\nsudo apt-get install flex bison libfl-dev\nsudo apt-get install g++-3.4 gcc-3.4\nsudo apt-get install tcpdump\nsudo apt-get install sqlite sqlite3 libsqlite3-dev\nsudo apt-get install libgtk2.0-0 libgtk2.0-dev\nsudo apt-get install libgtk-3-dev\nsudo apt-get install libxml2 libxml2-dev\nsudo apt-get install vtun lxc uml-utilities\nsudo apt-get install uncrustify\nsudo apt-get install doxygen graphviz imagemagick\nsudo apt-get install texlive texlive-extra-utils texlive-latex-extra texlive-font-utils dvipng latexmk\nsudo apt-get install python3-sphinx dia \nsudo apt-get install gir1.2-goocanvas-2.0 python3-gi python3-gi-cairo python3-pygraphviz gir1.2-gtk-3.0 ipython3\nsudo apt-get install libxml2 libxml2-dev libboost-all-dev\nsudo apt-get install openmpi-bin openmpi-common openmpi-doc libopenmpi-dev\n```\n\n## How to run\n(1) Download certian c++/shell transcripts in this project, then put them into your own ns-3 project's different floders relatively. Make sure that you put the transcripts into correct folders!\n- 'MeshNet_connected_ip2_route_trace_goundnet.cc' should be put into the floder named 'scratch'.\n- 'NSH.cc','NSD.cc','LRST.cc' should be put into the floder named 'LinkingLogic_Decision'. \n(If there's no floder named 'LinkingLogic_Decision', you can create one under 'ns-3.37' route)\n- 'GS_Satnet_Simulation.sh' should just be put under 'ns-3.37' route.\n\n(2) **Run Algorithm:** Run the algorithm transcript(NSH.cc or NSD.cc or LRST.cc), then you'll get output files '_sat1.txt' & '_sat2.txt'.\n\n(3) **Choose the Algorithm:** 'GS_Satnet_Simulation.sh' line20-29, you can choose the algorithm you want to simulate.\n\n(4) **Run shell:** Open the terminal under the route 'ns-3.37', then:\n'''\nbash GS_Satnet_Simulation.sh\n'''\n\n## How to tailor\n\n(1) If you want to change the satellite-ground topology: Read ns-3/cpp codes in 'MeshNet_connected_ip2_route_trace_goundnet.cc', and modify it under the framework.\n\n(2) If you want to simulate more algorithm: Write your own algorithm transcript, then put into 'LinkingLogic_Decision' folder. Make sure that your codes can output '_sat1.txt' & '_sat2.txt'.\n\n(3) Other details: You can change them in transcript 'GS_Satnet_Simulation.sh' as you like.\n\n\n## Output\nYou can get four valuation output after running the project:\n- ave_PLR: average packet loss rate\n- ave_AT: average throughput\n- ave_E2ED: average end-to-end delay\n- ave_E2EJ: average end-to-end jitter\n\nThe output is like this:\n```\n\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u7dcf\u56de\u6570:50\u3002\u7d50\u679c\u306f\u3053\u3053\u304b\u3089\u66f8\u3044\u3066\u304a\u308a\u307e\u3059\u3002\n=======================>>>>FINAL SIMULATION RESULT<<<<=========================\n||   ave_PLR\uff1a0\n||   ave_AT:78.800448Kbps\n||   ave_E2ED:1.9218236000e+11ns\n||   ave_E2EJ:1.0025300000e+11ns\n||   (maxDelay:280405000000.0000000000 ns  minDelay:180152000000.0000000000 ns)\n=======================>>>>FINAL SIMULATION RESULT<<<<=========================\n```\n\nBy the way, **more detailed output**(valuation output under each time's simulation) during the running process is generated as files named 'SIMOUTPUT_Detailed_forread.txt' & 'SIMOUTPUT_foruse.txt'. They includes not only main valuation outputs, but also have sat-ground connecting number. like this:\n```\nGS(src)----SAT[2]  ----------> SAT[25]----GS(dst)\nTotalSent packets = 200\nTotal Lost Packets = 0\nPacket Loss ratio = 0%\nAverage Throughput = 79.0236Kbps\nEnd to End Delay = +1.80152e+11ns\nEnd to End Jitter delay = +0ns\n```\n\n\n",
  "examples": []
}