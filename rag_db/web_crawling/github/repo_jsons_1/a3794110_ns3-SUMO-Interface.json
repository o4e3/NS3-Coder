{
  "repo_name": "a3794110/ns3-SUMO-Interface",
  "github_url": "https://github.com/a3794110/ns3-SUMO-Interface",
  "readme": "# Network Simulation for Urban Mobility: ns-3 and SUMO\n\n## Project Overview\nTo make network simulation of urban mobility more user-friendly, we design a SUMO module which can do the network simulation in ns-3 with SUMO configuration.\n\nThe SUMO module outputs its vehicle trajectory file into ns-3; ns-3 deploy UE mobility with trajectory file. Moreover, the UE in ns-3 are intalled with ***LTE module*** and attach eNodeB when they enter the map. \n\nTo simulate the V2X application scenario, all UE are installed with UDP client application which send packets to remote server in cetain period. The packet interval and packet size can control with SUMO module we build.\n\nFigure offered below is the system architecture:\n![image](https://github.com/a3794110/ns3-SUMO-Interface/blob/master/NS3-SUMO-Interface.jpg)\n\n## License\n\nBSD 3-Clause License\n\nCopyright (c) 2019, Ping-Han\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n1. Redistributions of source code must retain the above copyright notice, this\n   list of conditions and the following disclaimer.\n\n2. Redistributions in binary form must reproduce the above copyright notice,\n   this list of conditions and the following disclaimer in the documentation\n   and/or other materials provided with the distribution.\n\n3. Neither the name of the copyright holder nor the names of its\n   contributors may be used to endorse or promote products derived from\n   this software without specific prior written permission.\n## Prerequisite\nWe test our project on following version of ns-3 and SUMO.\n\n    ns-3.26\n    SUMO 1.2.0\n    python 3.7\n\nPlease install SUMO with following commands.\n```\nsudo apt-get install cmake python g++ libxerces-c-dev libfox-1.6-dev libgdal-dev libproj-dev libgl2ps-dev swig\ngit clone --recursive https://github.com/eclipse/sumo\nexport SUMO_HOME=\"$PWD/sumo\"\nmkdir sumo/build/cmake-build && cd sumo/build/cmake-build\ncmake ../..\nmake -j$(nproc)\n```\n    \n\n## Build and Installation\n\n### ns-3\nPut files in folder **scratch** we offered into folder **scracth** in ns-3 working directory.\n### SUMO \nPut files in folder **SUMO** we offered into the folder **tools** in SUMO working directory.\n\n### Envirment Variables\nModify enviroment variable setting in file **RunNs3.sh** for customization.\n\n    # ----------------------------------------------------defined by user\n    export NS3_HOME='/home/hank/ns-allinone-3.26/ns-3.26'                 \n    #-----------------------------------------------------defined by user\nMake NS3_HOME as your working directory of ns-3.\n\nMoreover, please do the following setting before run this project **everytime**.\n\n    export SUMO_HOME='home/hank/sumo'                  \nMake SUMO_HOME as **your** working directory of SUMO (contained with folder bin, build, tools etc.)\n\n## Tutorial\n\n### How to start?\n\nFor importing modules, add the following content into the main python script of the project you want to simulate.\n\n```\ntry:\n    \n    sys.path.append(os.path.join(os.path.dirname(\n        __file__), '..', '..', '..', '..', \"tools\"))  # tutorial in tests\n    sys.path.append(os.path.join(os.environ.get(\"SUMO_HOME\", os.path.join(\n        os.path.dirname(__file__), \"..\", \"..\", \"..\")), \"tools\"))  # tutorial in docs\n    from sumolib import checkBinary  # noqa\n    from ControlNs3 import Ns3Simulation\n    import traci\n    \nexcept ImportError:\n    sys.exit(\n        \"please declare environment variable 'SUMO_HOME' as the root directory of your sumo installation (it should contain folders 'bin', 'tools' and 'docs')\")\n```\n\n\nAfter that, add the following function into the script to call ns-3 for network simulaiton.\n\n    Ns3LteSimulation(simTime = 50, enbTxPowerDbm = 46, packetSize = 1024, packetsInterval = 500, fadingModel = 0) \n\n\n### How to modify network simulation configuration?\n\nThe description of the function arguments is offered in the following content.\n```\ndef Ns3LteSimulation( simTime = 50, enbTxPowerDbm = 46, ulpacketSize = 1024, ulpacketsInterval = 500, dlpacketSize = 1024, dlpacketsInterval = 500, fadingModel = 0):\n#============================================================================================\n# simTime\", \"Total duration of the simulation (in seconds)\n# enbTxPowerDbm\", \"TX power [dBm] used by HeNBs (default = 46.0)\n# ulpacketSize\",\"Size (bytes) of UL packets generated send to Remote Server. (default = 1024 bytes). The minimum packet size is 12 bytes which is the size of the header carrying the sequence number and the time stamp.\n# ulpacketsInterval\",\"The time (ms) wait between UL packets send to Remote Server. (default = 500 ms)\n# dlpacketSize\",\"Size (bytes) of DL packets generated send to Remote Server. (default = 1024 bytes). The minimum packet size is 12 bytes which is the size of the header carrying the sequence number and the time stamp.\n# dlpacketsInterval\",\"The time (ms) wait between DL packets send to Remote Server. (default = 500 ms)\n# fadingModel\",\"setting fading model (1, 2 and 3 represent pedestrian, urban and vehicular scenario respectively)\n#============================================================================================\n```\nAs you can see, we can control 5 types of ns-3 simulation parameter from SUMO. (user-friendly!!)\n\n### How to import eNodeB Location files?\n\nWe defined the format of eNodeB location file for importing eNodeB locations to simulation scenario. The following content shows the example file. \n```\n0 250:500 \n1 500:500 \n2 750:500 \n3 250:750 \n4 500:750 \n5 750:750 \n6 250:1000 \n7 500:1000 \n8 750:1000\n```\nThe meaning of above mentioned file is offered in the following content.\n```\neNodeB_id0 x_position_id0:y_position_id0\neNodeB_id1 x_position_id1:y_position_id1\n```\n\nPlease modify line 143 and 152 in file UrbanMobilitySimulationwithLte.cc for changing the imported eNodeB location file.\n```\nifstream EnbinFile(\"scratch/EnbLocations2.txt\"); \nifstream Enbcin(\"scratch/EnbLocations2.txt\"); \n```\n\n## Example\n\nWe offered an example project in folder **Example**. In this project, vehicles enter the map according to Poisson \u03bb=1 k=1. You can see the example usage in file **main.py**.\n\nThe following video shows the result of using different simulation configuration with this project.\nhttps://youtu.be/9UtVOFBHFtk\n",
  "examples": []
}