{
  "repo_name": "lip6-mptcp/ns3mptcp",
  "github_url": "https://github.com/lip6-mptcp/ns3mptcp",
  "readme": "\n    The Network Simulator, Version 3\n    --------------------------------\n\nTable of Contents:\n------------------\n\n1) An overview\n2) Building ns-3\n3) Running ns-3\n4) Getting access to the ns-3 documentation\n5) Working with the development version of ns-3\n\nNote:  Much more substantial information about ns-3 can be found at\nhttp://www.nsnam.org\n\n1) An Open Source project\n-------------------------\n\nns-3 is a free open source project aiming to build a discrete-event\nnetwork simulator targeted for simulation research and education.   \nThis is a collaborative project; we hope that\nthe missing pieces of the models we have not yet implemented\nwill be contributed by the community in an open collaboration\nprocess.\n\nThe process of contributing to the ns-3 project varies with\nthe people involved, the amount of time they can invest\nand the type of model they want to work on, but the current\nprocess that the project tries to follow is described here:\nhttp://www.nsnam.org/developers/contributing-code/\n\nThis README excerpts some details from a more extensive\ntutorial that is maintained at:\nhttp://www.nsnam.org/documentation/latest/\n\n2) Building ns-3\n----------------\n\nThe code for the framework and the default models provided\nby ns-3 is built as a set of libraries. User simulations\nare expected to be written as simple programs that make\nuse of these ns-3 libraries.\n\nTo build the set of default libraries and the example\nprograms included in this package, you need to use the\ntool 'waf'. Detailed information on how use waf is \nincluded in the file doc/build.txt\n\nHowever, the real quick and dirty way to get started is to\ntype the command\n  ./waf configure --enable-examples\nfollowed by\n  ./waf \nin the the directory which contains\nthis README file. The files built will be copied in the\nbuild/ directory.\n\nThe current codebase is expected to build and run on the\nset of platforms listed in the RELEASE_NOTES file.\n\nOther platforms may or may not work: we welcome patches to \nimprove the portability of the code to these other platforms. \n\n3) Running ns-3\n---------------\n\nOn recent Linux systems, once you have built ns-3 (with examples\nenabled), it should be easy to run the sample programs with the\nfollowing command, such as:\n\n  ./waf --run simple-global-routing\n\nThat program should generate a simple-global-routing.tr text \ntrace file and a set of simple-global-routing-xx-xx.pcap binary\npcap trace files, which can be read by tcpdump -tt -r filename.pcap\nThe program source can be found in the examples/routing directory.\n\n4) Getting access to the ns-3 documentation\n-------------------------------------------\n\nOnce you have verified that your build of ns-3 works by running\nthe simple-point-to-point example as outlined in 4) above, it is\nquite likely that you will want to get started on reading\nsome ns-3 documentation. \n\nAll of that documentation should always be available from\nthe ns-3 website: http:://www.nsnam.org/documentation/.\n\nThis documentation includes:\n\n  - a tutorial\n \n  - a reference manual\n\n  - models in the ns-3 model library\n\n  - a wiki for user-contributed tips: http://www.nsnam.org/wiki/\n\n  - API documentation generated using doxygen: this is\n    a reference manual, most likely not very well suited \n    as introductory text:\n    http://www.nsnam.org/doxygen/index.html\n\n5) Working with the development version of ns-3\n-----------------------------------------------\n\nIf you want to download and use the development version \nof ns-3, you need to use the tool 'mercurial'. A quick and\ndirty cheat sheet is included in doc/mercurial.txt but\nreading through the mercurial tutorials included on the\nmercurial website is usually a good idea if you are not\nfamiliar with it.\n\nIf you have successfully installed mercurial, you can get\na copy of the development version with the following command:\n\"hg clone http://code.nsnam.org/ns-3-dev\"\n",
  "examples": []
}