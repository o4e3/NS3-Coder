{
  "repo_name": "ni/NI-ns3-ApplicationExample",
  "github_url": "https://github.com/ni/NI-ns3-ApplicationExample",
  "readme": "# NI ns-3 Application Example\n\nThis is an implementation of an application programming interface (API) to connect the ns-3 network simulator to NI software defined radios (SDR) for 802.11 and LTE. Further radio access technology (RAT) interworking functionalities such as LTE-WLAN aggregation (LWA/LWIP) and dual connectivity (DC) are available.\n\n## Overview\nThe following figure shows an overview of the setup that can be used for 802.11 and LTE.\n\n![Overview ](src/ni/doc/figures/Overview.png  \"Overview of ns-3 Application Example\")\n\n## Supported Hardware and Software\n- Support for USRP-2974 ([Link](http://www.ni.com/en-us/support/model.usrp-2974.html))\n- Support for LabVIEW Communications System Design Suite 2.0  ([LINK](http://www.ni.com/download/labview-communications-and-system-design-suite-2.0/6175/en/))\n- Support for LabVIEW Communications LTE Application Framework 2.2 ([LINK](http://www.ni.com/download/lte-application-framework-2.2/7740/en/))\n- Support for LabVIEW Communications 802.11 Application Framework 2.2 ([LINK](http://www.ni.com/download/802.11-application-framework-2.2/7739/en/) )\n- Support for NI-USRP 17.2 Driver ([LINK](http://www.ni.com/download/ni-usrp-17.2/7584/en/) )\n- Support for NI Linux RT LabVIEW Communications 2.0.1 Real-Time Target Image ([LINK](http://www.ni.com/download/labview-communications-and-system-design-suite-2.0/7754/en/) )\n- Support for single LTE eNB or 802.11 AccessPoint (AP) and single LTE UE or 802.11 Station (Sta) \n- Support for combined LTE eNB or 802.11 AccessPoint (AP) and combined LTE UE or 802.11 Station (Sta) using USRP-2974 with PCIe expansion (needed for LWA/LWIP)\n- Support for two separate LTE eNB and two separate LTE UE (needed for DC)\n\n\n\n## Installation Guide\nThe setup of the system can be accomplished in four steps\n\n1. Prepare the Hardware\n2. Install Linux RT\n3. Install NS-3\n4. Install LabVIEW Communications and Application Frameworks and run NI ns3 Application Example for 802.11 or LTE\n\nThese steps will be described in the next sections.\n### Prepare the Hardware\nThe following hardware setup is supported and shall be cabled as shown.\n\n![Hardware Setup for NI NS-3 Application Example](src/ni/doc/figures/HardwareSetup_simple.png  \"Hardware Setup for NI NS-3 Application Example\")\n\n### Install Linux RT\n\nThis section describes the installation of Linux RT on a USRP 2974.\n\n**The following steps need to be executed on both eNB/AP and UE/Sta  USRP-2974.**\n\nTo use the ns-3 simulator with the L1/L2 API and integration towards the PHY layer implementations of the LTE and 802.11 Application Framework, the proper Linux RT image for the USRP-2974 as well as for LabVIEW Communications System Design Suite 2.0 has to be used. \n\nDownload the image from [LabVIEW Communications 2.0.1 Real-Time Target Image](http://www.ni.com/download/labview-communications-and-system-design-suite-2.0/7754/en/)\n\nInstall the image as described under [Provisioning a Real-Time Controller or USRP Stand-Alone Device for LabVIEW Communications](http://www.ni.com/tutorial/54622/en/)  for every USRP-2974 in the setup.\n\n### Install NS-3\n\nThis section describes the installation of the ns-3 stack with the L1/L2 API on a USRP-2974. \n\n**The following steps need to be executed on both eNB/AP and UE/Sta  USRP-2974.**\n\nConnect remotely via ssh (use *ssh* under Linux or [putty](https://www.putty.org) under Windows). To find the correct IP address of the device, connect a monitor and keyboard to the USRP-2974 and run *ifconfig* to yield the IP address for *eth0* or check under the Hardware Tab in LabVIEW Communications System Design Suite (if already available) for the registered devices. Use username *root* with empty password.\n\nFor an automated installation process \n\n- Download the script from [src/ni/scripts/prepare_usrp_2974.sh](src/ni/scripts/prepare_usrp_2974.sh), \n\n- Copy the script to the USRP-2974 \n\n- Execute the script on the USRP-2974\n\nor proceed with the manual setup described below.\n\nInstall required packages from dependencies with the following commands:\n\n```\nopkg update\nopkg install --force-downgrade packagegroup-core-buildessential git\n```\n\nClone the repository and copy it to /home/root/ns-3.26\n\n```\ngit clone https://github.com/ni/NI-ns3-ApplicationExample.git /home/root/ns-3.26 \n```\n\nGo into ns-3 folder\n\n```\ncd ns-3.26\n```\n\nBuild/compile ns-3 code:\n\n```\nmake\n```\n\nThe compilation should run without an error.\n\nInstall binaries related to NI examples:\n\n```\nmake install_ni\n```\n\nTo check whether the NI ns3 Application Example has been compiled and installed correctly, just run\n\nFor LTE:  \n\n```\nns3.26-ni-lte-simple-optimized\n```\n\nFor 802.11\n\n```\nns3.26-ni-wifi-simple-optimized\n```\n\nThese calls of the compiled NI ns3 Application Examples for LTE and 802.11 are running the example in simulation mode where transmitter and receiver are both simulated in one ns3 instance without any connection to the NI Application Frameworks. Optionally the NI start script can be used to experiment with the different scenarios in simulation mode. For more information type\n\n```\n./ni_start.sh --help\n```\n\n### Install LabVIEW Communications System Design Suite 2.0 and Application Frameworks 2.2 and run Application Examples\n\nTo connect with ns-3 properly over the L1/L2 API, the Application Frameworks need to be configured correctly.\nThe instructions to setup the 802.11 Application Framework and run the NI ns3 Application Example for 802.11 can be found here: [Setup 802.11 Application Framework](src/ni/doc/Setup_Wifi_AFW_ns3.pdf) \nThe instructions to setup the LTE Application Framework and run the NI ns3 Application Example for LTE can be found here:  [Setup LTE Application Framework](src/ni/doc/Setup_Lte_AFW_ns3.pdf) \n\n### LWA/LWIP Extension\n\nIn conjunction with the EU funded research project [ORCA](https://www.orca-project.eu) and the Open Call 1 for Extensions, an extension for the LTE/WiFi interworking technologies LWA and LWIP has been implemented. See a detailed description of the functionality from the authors [HERE](https://arxiv.org/abs/1901.03683). \n\nThe extension can be used in simulation mode by running the following executable in the terminal:\n\n```\nns3.26-ni-lte-wifi-extended-optimized\n```\n\nLWA/LWIP functionality can be configured in the corresponding main file: `ni-lte-wifi-extended.cc`. Beside simulation also the connection to the Application Frameworks using L1/L2 API is possible.\n\n### Dual Connectivity (DC) Extension\nAs an outcome of Open Call 2 for Extensions within the EU-funded research project [ORCA](https://www.orca-project.eu), an extension of ns-3 for Dual Connectivity in LTE was developed.\n\nThe extension can be used in simulation mode as described in the following.\n\nFirst, it is needed to setup the ethernet interface of your machine, e.g,, \"eth0\" into promiscuous mode. \n\nThis is achieved by running the following command. Please adapt the interface name to your machine settings.\n\n```\nsudo ip link set eth0 promisc on\n```\nThen the extension can be started by calling the appropriate binary and passing the name of the ethernet interface name:\n\n```\nns3.26-dali-lte-dc-experimentation-optimized --fdDeviceName=\"eth0\"\n```\nFurther information about the usage can be found [HERE](src/dali/doc/DALI_ns3_User_Guide.pdf) .\n\nA video tutorial, showcasing the functionality can be found [HERE](https://youtu.be/Ggr2q6KyQRI).\n\nBeside simulation also the connection to the Application Frameworks using L1/L2 API is possible.\n\n### 5G-GFDM Physical Layer Integration\nAdditionally, a 5G-GFDM physical layer was integrated using an adapted version of the L1/L2 API. The implementation of the 5G-GFDM physical layer will be available under agreement with TU Dresden. Contact information can be found [HERE](http://owl.ifn.et.tu-dresden.de). The ns-3 implementation is based on the LTE module with small adaptions to support configurable subcarrier spacings (SCS). \n\n### 5G-LTE-WiFi Interworking\nAs final result of the EU-funded research project [ORCA](https://www.orca-project.eu) a combined main file was made available, which includes all radio access technologies and corresponding interworking working functionalities listed above. With this it is possible to run the DC extension using LTE as master and 5G-GFDM as secondary path or offload traffic over WiFi using LWA/LWIP.\n\nThe example can be used in simulation mode by running the following executable in the terminal:\n\n```\nns3.26-ni-5g-lte-wifi-interworking-optimized\n```\n\nThe functionality can be configured in the corresponding main file: `ni-5g-lte-wifi-interworking.cc`.\n\nBeside simulation also the connection to the Application Frameworks using L1/L2 API is possible.\n\n## Known Issues / Limitations\n- NI examples are currently running only if binaries are build in optimized mode\n- Transmission of packets with MTU size >=1500 bytes is not recommended because of packet fragmentation\n- On high CPU consumption (e.g. running experiments with high data rates) the eNB stack will drop packets (CNF_TIMEOUT) to ensure further real time processing\n- Single LTE UE / WiFi STAtion supported\n- TapBridge support is only available for downlink and with limited stability\n- LWA/LWIP\n  - Only downlink is supported\n  - Data aggregation on UE is not implemented (because NS-3 PDCP reordering is not available)\n  - WIFI measurement reporting over LWA/LWIP is not implemented\n  - LWIP implementation only works for single UE\n- DC\n  - RLC AM is not supported\n  - Uplink and TCP functionalities are experimental\n  - System instabilities on scenarios with high throughput (>30MBits) due to emu-fd-net-device limitations and MAC PDU assembly processing\n  - TapBridge only available for master path (MeNB / mUE)\n\n\n## Additional Links\n- [NI LTE Application Framework](http://www.ni.com/de-de/shop/select/labview-communications-lte-application-framework) \n- [NI 802.11 Application Framework](http://www.ni.com/de-de/shop/select/labview-communications-802-11-application-framework)\n- [USRP-2974](http://www.ni.com/de-de/support/model.usrp-2974.html)\n- [ORCA Project](https://www.orca-project.eu) ",
  "examples": []
}