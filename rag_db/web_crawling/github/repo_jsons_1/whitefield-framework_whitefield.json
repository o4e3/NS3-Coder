{
  "repo_name": "whitefield-framework/whitefield",
  "github_url": "https://github.com/whitefield-framework/whitefield",
  "readme": "![Alt text](docs/res/Logo.png \"Whitefield Logo\")\n\n[![GitPitch](https://img.shields.io/badge/What%20is%20Whitefield%3F-Slides-Violet)](https://docs.google.com/presentation/d/e/2PACX-1vRE-8g-tyh7MwECHnWwYGC9mJWKVOCQnWWwUjD-5wnvu_fW1w75h_K91UM1FV9QOMcNWYW2mdFxds9J/pub?start=false&loop=false&delayms=3000)\n[![Setup & Regress](https://github.com/whitefield-framework/whitefield/actions/workflows/setup_regress.yml/badge.svg)\n[![Doc status](https://readthedocs.org/projects/whitefield/badge/?version=latest)](https://whitefield.readthedocs.io/en/latest/)\n[![Join the chat at https://gitter.im/whitefield-fw](https://img.shields.io/badge/Got%20Questions%3F-Chat-Violet)](https://github.com/whitefield-framework/whitefield/discussions)\n\nWhitefield provides a simulation environment for sensor networks by\ncombining realistic PHY/MAC layer simulation with the native mode use of popular IoT\nstacks/OSes such as [Contiki]/[RIOT]/[OpenThread]/[Zephyr]/[FreeRTOS]/[OT-RTOS]. \nThus one can use existing stack implementation as is and test it on top of\nrealistic RF simulation.\n\nWhitefield uses PHY/MAC layer provided by popular simulators (such as\n[NS3-lrwpan]/PLC) and loosely couples it with the constrained network stacks\nsupported by popular IoT OSes, thus providing the best of both worlds.\nIt provides common visualization and OAM tools (logs, pcap, shell) which\nsimplifies monitoring and troubleshooting.\n\nTypical use-cases of Whitefield:\n1. Large scale realistic testing with real-world embedded stacks. Test\n   thousands of nodes with realistic 802.15.4 and Power Line Communication\n   interfaces.\n2. Large scale interop testing between different network stacks in same environment.\n3. Create reproducible work/experiments. Most of the experiments mentioned in the\n   papers are difficult to be reproduced. Whitefield helps alleviate this\n   issue.\n\n![Alt text](docs/res/Whitefield%20-%20HLD.png \"Whitefield-High Level design\")\n\n**Terminology**:\n\n[Airline](src/airline): Airline refers to PHY/MAC/RDC implementation provided\nby third-party simulators such as NS3/Castalia-Omnet++. Provides configuration\nmanagement and OAM tools which works across any third-party simulators. It\ninterfaces with Commline to send/recv messages to/from Stackline.\n\n[Commline](src/commline): Message queue and corresponding interfaces which\ndecouples Airline and Stackline. All the messages, be it the network payloads or\nOAM messages are transported using Commline.\n\n[Stackline](src/stackline): 6lowpan/Network layer and above protocol stack\nprovided by third-party IoT OSes such as Contiki/RIOT. A new platform is added\nin such OSes to interface with Whitefield. The protocol stack with application\nwill be used as-is from these OSes.\n\n### Setup Instructions\n\n<details>\n  <summary>Build Instructions (Native Install)</summary>\n\n```\ngit clone https://github.com/whitefield-framework/whitefield\ncd whitefield\n./scripts/setup.sh #This may take a while...\nmake\n```\n</details>\n\n<details>\n  <summary>Build Instructions (Vagrant Install with Ubuntu 18.04)</summary>\n\n```\ngit clone https://github.com/whitefield-framework/whitefield\ncd whitefield\nvagrant up\t# <- step takes time\nvagrant ssh\n```\n</details>\n\n<details>\n  <summary>Build Instructions (Vagrant Install with Ubuntu 20.04)</summary>\n\n```\ngit clone https://github.com/whitefield-framework/whitefield\ncd whitefield\nIMG=focal64 vagrant up\t# <- step takes time\nIMG=focal64 vagrant ssh\n```\n</details>\n\n**Execute Instructions**:\n```\n$ cd whitefield\n\n#Start Whitefield\n$ ./invoke_whitefield.sh config/wf.cfg\n\n#Monitor whitefield status\n$ ./scripts/monitor.sh\n\n#View live network toplogy open http://localhost:8080/ in a browser\n$ ./canvas/canvas.py\n\n#Whitefield shell\n$ ./scripts/wfshell help\n\n#Stop whitefield\n$ ./scripts/wfshell stop_whitefield\n```\n\n* ### [Configuration manual](docs/wf-config-help.rst \"Whitefield Configuration\")\n* ### [OAM/Monitor command manual](docs/wf_oam_help.md \"Whitefield OAM commands\")\n* ### [Using RIOT/Contiki with Whitefield](docs/wf_using_riot_contiki.md \"Whitefield with Contiki/RIOT\")\n* ### [Using OpenThread with Whitefield](docs/OpenThread.md \"Whitefield with OpenThread\")\n* ### [Whitefield compared to Cooja/NS3](docs/wf-vs-cooja.md \"Whitefield compared to Cooja/NS3\")\n* ### [Module support table](docs/wf-module-support.rst \"Module support table\")\n* ### [Forum](https://groups.google.com/forum/?pli=1#!forum/whitefield-fw \"Mailing List\")\n\n### Work done in Whitefield\n\n* ### [RPL Efficient Route Invalidation](https://github.com/nyrahul/ietf-data/blob/master/DCO_performance_report.md)\n* ### [6Lo Fragment Forwarding](https://github.com/nyrahul/ietf-data/blob/master/6lo-fragfwd-perf-report.rst)\n\n[NS3-lrwpan]: https://www.nsnam.org/docs/models/html/lr-wpan.html\n[Contiki]: http://www.contiki-os.org/\n[RIOT]: https://riot-os.org/\n[OpenThread]: https://openthread.io/\n[FreeRTOS]: https://freertos.org/\n[Zephyr]: https://www.zephyrproject.org/\n[OT-RTOS]: https://openthread.io/platforms/ot-rtos\n\n",
  "examples": []
}